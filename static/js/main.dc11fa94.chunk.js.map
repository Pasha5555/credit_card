{"version":3,"sources":["images/1.png","components/InputStyles.jsx","components/CreditCard.jsx","App.js","reportWebVitals.js","index.js"],"names":["InputNumber","styled","input","props","emptyInput","border","boxShadow","InputCVV","InputDate","CreditCard","useState","cardNumber","setCardNumber","CVV","setCVV","isCardNumber","setIsCardNumber","isCVV","setIsCVV","date","setDate","isDate","setIsDate","className","type","onClick","alert","src","visa","alt","id","value","onChange","e","target","length","replace","trimRight","match","startsWith","monthAndYear","split","month","year","currentDate","Date","parse","getFullYear","getMonth","inputDate","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dc11fa94.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/1.92590951.png\";","import styled from 'styled-components';\n\nexport const InputNumber = styled.input`\n    background-color: rgb(122, 122, 255);\n    border: ${ props => props.emptyInput \n        ? '2px solid transparent' \n        : props.border \n            ? '2px solid rgb(146, 221, 146)' \n            : '2px solid rgb(255, 68, 68)'};\n    height: 35px;\n    width: 300px;\n    margin-right: 120px;\n    font-family: \"Roboto\", sans-serif;\n    color: #fff; \n    text-align-last: center;\n    font-size: 1.4rem;  \n    box-shadow: ${ props => props.emptyInput \n        ? '0px' \n        : props.boxShadow \n            ? '0 0 5px rgb(146, 221, 146)'\n            : '0 0 5px rgb(255, 68, 68)'};\n    outline: none;\n`;\n\nexport const InputCVV = styled.input`\n    background-color: rgb(122, 122, 255);\n    height: 30px;\n    width: 80px;\n    text-align-last: center;\n    color: rgb(189, 189, 252);\n    font-family: \"Roboto\", sans-serif;\n    appearance: none;\n    font-size: 1.2rem;\n    border: ${ props => props.emptyInput \n        ? '2px solid transparent' \n        : props.border \n            ? '2px solid rgb(146, 221, 146)' \n            :'2px solid rgb(255, 68, 68)'};\n    box-shadow: ${ props => props.emptyInput\n        ? '0px' \n        : props.boxShadow \n            ? '0 0 5px rgb(146, 221, 146)' \n            :'0 0 5px rgb(255, 68, 68)'};\n    outline: none;\n`;\n\nexport const InputDate = styled.input`\n    background-color: rgb(122, 122, 255);\n    height: 30px;\n    color: rgb(189, 189, 252);\n    font-family: \"Roboto\", sans-serif;\n    appearance: none;\n    text-align-last: center;\n    font-size: 1.2rem;\n    width: 150px;\n    color: #fff; \n    border: ${ props => props.emptyInput || props.border === null \n        ? '2px solid transparent' \n        : props.border \n            ? '2px solid rgb(146, 221, 146)' \n            :'2px solid rgb(255, 68, 68)'};\n    box-shadow: ${ props => props.emptyInput || props.border === null \n        ? '0px' \n        : props.boxShadow \n            ? '0 0 5px rgb(146, 221, 146)' \n            :'0 0 5px rgb(255, 68, 68)'};\n    outline: none;\n`;","import React, { useState } from 'react';\nimport \"./CreditCard.css\";\nimport visa from '../images/1.png'\nimport { InputNumber, InputCVV, InputDate } from './InputStyles.jsx';\n\nexport const CreditCard = () => {\n    const [cardNumber, setCardNumber] = useState('');\n    const [CVV, setCVV] = useState('');\n    const [isCardNumber, setIsCardNumber] = useState(false);\n    const [isCVV, setIsCVV] = useState(false)\n    const [date, setDate] = useState('');\n    const [isDate, setIsDate] = useState(null)\n\n    const isTrueCardNumber = e =>{\n        const {value} = e.target;\n\n        value.length < 20 && setCardNumber(value\n            .replace(/\\W/gi, '').replace(/(.{4})/g, '$1 ')\n            .trimRight())\n\n        value.match(/\\d{4}([\\s]|)\\d{4}([\\s]|)\\d{4}([\\s]|)\\d{4}/) !== null &&\n            value.startsWith('4') ?\n            setIsCardNumber(true) : setIsCardNumber(false)\n    }\n\n    const isTrueCVV = e =>{\n        const {value} = e.target;\n\n        value.length <= 3 && setCVV(value)\n\n        value.match(/\\d{3}/)!==null ? setIsCVV(true) : setIsCVV(false)\n    }\n\n    const isTrueDate = e =>{\n        const {value} = e.target;\n\n        value.length < 8 && setDate(value.length === 2 ? value + '/' : value)\n\n        const monthAndYear = value.split('/');\n        const [month, year] = monthAndYear;\n        const currentDate = Date.parse(new Date().getFullYear()) \n            + Date.parse(new Date().getMonth());\n        const inputDate = Date.parse(+month) + Date.parse(+year);\n\n        currentDate < inputDate && +month <= 12 && +year < 2026 ? \n            setIsDate(true) : setIsDate(false)\n    }\n\n    const pay = () => {\n        isCardNumber && isCVV && isDate ?\n            alert(\"Successfully payed!\") : alert(\"Input fields*\")\n    }\n\n\n    return(\n        <div>\n            <div className=\"background\"></div>\n            <div className=\"fon-block\"></div>\n            <div className=\"pay-block\">\n                <div className=\"pay-block__detail detail\">\n                    <p className=\"detail__headers\">TOTAL</p>\n                    <p className=\"detail__total-price\">$898</p>\n                    <p className=\"detail__headers\">DETAIL</p>\n                    <div className=\"detail__gadget-container\">\n                        <p className=\"detail__gadgets\">iPad Pro</p>\n                        <p className=\"detail__price\">$799</p>\n                    </div>\n                    <div className=\"detail__gadget-container\">\n                        <p className=\"detail__gadgets\">Apple Pencil</p>\n                        <p className=\"detail__price\">$99</p>\n                    </div>\n                    <button \n                        type=\"button\" \n                        className=\"detail__button-pay\"\n                        onClick={pay}\n                    >\n                        PAY NOW\n                    </button>\n                </div>\n                <div className=\"credit-card\">\n                    <h2 className=\"credit-card__owner\">Carly Ling</h2>\n                    <img className=\"credit-card__type\" src={visa} alt=\"VISA\"/>\n                    <h4 className=\"credit-card__number\">Credit Card Number</h4>\n                    <InputNumber \n                        type=\"text\" \n                        id=\"cardNumber\"\n                        value={cardNumber} \n                        emptyInput={cardNumber ===''} \n                        border = {isCardNumber} \n                        boxShadow={isCardNumber} \n                        onChange={isTrueCardNumber} \n                    />\n                    <div>\n                        <h4 className=\"credit-card__below-headers\">Expiration</h4>\n                        <h4 className=\"credit-card__below-headers\">CVV</h4>\n                    </div>\n                    <div className=\"credit-card__below-inputs\">  \n                        <InputDate  \n                            value={date} \n                            id=\"date\"\n                            emptyInput={date ===''} \n                            border = {isDate} \n                            boxShadow={isDate} \n                            onChange={isTrueDate}\n                        />\n                        <InputCVV \n                            type=\"password\" \n                            id=\"cvv\"\n                            value={CVV} \n                            emptyInput={CVV ===''} \n                            border = {isCVV} \n                            boxShadow={isCVV} \n                            onChange={isTrueCVV}\n                        />\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport './App.css';\nimport { CreditCard } from './components/CreditCard.jsx';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <CreditCard />\n    </div>\n  );\n}//to be continue...\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
{"version":3,"sources":["images/1.png","components/InputStyles.jsx","components/CreditCard.jsx","App.js","reportWebVitals.js","index.js"],"names":["BaseInput","styled","input","props","emptyInput","border","boxShadow","InputNumber","InputCVV","InputDate","CreditCard","useState","cardNumber","setCardNumber","CVV","setCVV","date","setDate","isCardNumber","setIsCardNumber","isCVV","setIsCVV","isDate","setIsDate","isTrueCardNumber","useCallback","e","value","target","length","replace","trimRight","match","startsWith","isTrueCVV","isTrueDate","monthAndYear","split","month","year","Date","parse","getFullYear","getMonth","pay","alert","className","type","onClick","src","visa","alt","id","onChange","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.72f8c424.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/1.92590951.png\";","/* eslint-disable no-nested-ternary */\nimport styled from 'styled-components';\n\nconst BaseInput = styled.input`\n  background-color: rgb(122, 122, 255);\n  font-family: \"Roboto\", sans-serif;\n  font-size: 1.2rem;\n  color: #fff;\n  appearance: none;\n  text-align-last: center;\n  outline: none;\n  border: ${props => (props.emptyInput\n    ? '2px solid transparent'\n    : props.border\n      ? '2px solid rgb(146, 221, 146)'\n      : '2px solid rgb(255, 68, 68)')};\n  box-shadow: ${props => (props.emptyInput\n    ? '0px'\n    : props.boxShadow\n      ? '0 0 5px rgb(146, 221, 146)'\n      : '0 0 5px rgb(255, 68, 68)')};\n\n    hhggfhg\n`;\n\nexport const InputNumber = styled(BaseInput)`\n  height: 35px;\n  width: 300px;\n  margin-right: 120px;\n`;\n\nexport const InputCVV = styled(BaseInput)`\n  height: 30px;\n  width: 80px;\n`;\n\nexport const InputDate = styled(BaseInput)`\n  height: 30px;\n  width: 150px;\n`;\n","import React, { useState, useCallback } from 'react';\nimport './CreditCard.css';\nimport visa from '../images/1.png';\nimport { InputNumber, InputCVV, InputDate } from './InputStyles';\n\nexport const CreditCard = () => {\n  const [cardNumber, setCardNumber] = useState('');\n  const [CVV, setCVV] = useState('');\n  const [date, setDate] = useState('');\n  const [isCardNumber, setIsCardNumber] = useState(false);\n  const [isCVV, setIsCVV] = useState(false);\n  const [isDate, setIsDate] = useState(false);\n\n  const isTrueCardNumber = useCallback((e) => {\n    const { value } = e.target;\n\n    value.length < 20 && setCardNumber(value\n      .replace(/\\W/gi, '').replace(/(.{4})/g, '$1 ')\n      .trimRight());\n\n    value.match(/\\d{4}([\\s]|)\\d{4}([\\s]|)\\d{4}([\\s]|)\\d{4}/) !== null\n      && value.startsWith('4')\n      ? setIsCardNumber(true) : setIsCardNumber(false);\n  }, [isCardNumber]);\n\n  const isTrueCVV = useCallback((e) => {\n    const { value } = e.target;\n\n    value.length <= 3 && setCVV(value);\n\n    value.match(/\\d{3}/) !== null ? setIsCVV(true) : setIsCVV(false);\n  }, [CVV]);\n\n  const isTrueDate = useCallback((e) => {\n    const { value } = e.target;\n\n    value.length < 8 && setDate(value.length === 2 ? `${value}/` : value);\n\n    const monthAndYear = value.split('/');\n    const [month, year] = monthAndYear;\n    const currentDate = Date.parse(new Date().getFullYear())\n          + Date.parse(new Date().getMonth());\n    const inputDate = Date.parse(+month) + Date.parse(+year);\n\n    currentDate < inputDate && +month <= 12\n          && +year < new Date().getFullYear() + 6\n      ? setIsDate(true) : setIsDate(false);\n  }, [date]);\n\n  const pay = useCallback(() => {\n    isCardNumber && isCVV && isDate\n      // eslint-disable-next-line no-alert\n      ? alert('Successfully payed!') : alert('Input fields*');\n  }, [cardNumber, date, CVV]);\n\n  return (\n    <div>\n      <div className=\"background\" />\n      <div className=\"fon-block\" />\n      <div className=\"pay-block\">\n        <div className=\"pay-block__detail detail\">\n          <p className=\"detail__headers\">TOTAL</p>\n          <p className=\"detail__total-price\">$898</p>\n          <p className=\"detail__headers\">DETAIL</p>\n          <div className=\"detail__gadget-container\">\n            <p className=\"detail__gadgets\">iPad Pro</p>\n            <p className=\"detail__price\">$799</p>\n          </div>\n          <div className=\"detail__gadget-container\">\n            <p className=\"detail__gadgets\">Apple Pencil</p>\n            <p className=\"detail__price\">$99</p>\n          </div>\n          <button\n            type=\"button\"\n            className=\"detail__button-pay\"\n            onClick={pay}\n          >\n            PAY NOW\n          </button>\n        </div>\n        <div className=\"credit-card\">\n          <h2 className=\"credit-card__owner\">Carly Ling</h2>\n          <img className=\"credit-card__type\" src={visa} alt=\"VISA\" />\n          <h4 className=\"credit-card__number\">Credit Card Number</h4>\n          <InputNumber\n            type=\"text\"\n            id=\"cardNumber\"\n            value={cardNumber}\n            emptyInput={cardNumber === ''}\n            border={isCardNumber}\n            boxShadow={isCardNumber}\n            onChange={isTrueCardNumber}\n          />\n          <div>\n            <h4 className=\"credit-card__below-headers\">Expiration</h4>\n            <h4 className=\"credit-card__below-headers\">CVV</h4>\n          </div>\n          <div className=\"credit-card__below-inputs\">\n            <InputDate\n              value={date}\n              id=\"date\"\n              emptyInput={date === ''}\n              border={isDate}\n              boxShadow={isDate}\n              onChange={isTrueDate}\n            />\n            <InputCVV\n              type=\"password\"\n              id=\"cvv\"\n              value={CVV}\n              emptyInput={CVV === ''}\n              border={isCVV}\n              boxShadow={isCVV}\n              onChange={isTrueCVV}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './App.css';\nimport { CreditCard } from './components/CreditCard';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <CreditCard />\n    </div>\n  );\n}// to be continue...\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}